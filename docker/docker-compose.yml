services:
  #############
  # PLEX APPS #
  #############

  bazarr:
    image: 'lscr.io/linuxserver/bazarr:latest'
    container_name: 'bazarr'
    restart: unless-stopped
    environment:
      PGID: '${PGID}'
      PUID: '${PUID}'
      TZ: '${TZ}'
    ports:
      - "6767:6767"
    volumes:
      - '${DATA_DIR}/bazarr/config:/config'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  lidarr:
    image: 'lscr.io/linuxserver/lidarr:latest'
    container_name: 'lidarr'
    restart: unless-stopped
    environment:
      PGID: '${PGID}'
      PUID: '${PUID}'
      TZ: '${TZ}'
    ports:
      - "8686:8686"
    volumes:
      - '${DATA_DIR}/lidarr/config:/config'
      - '${DATA_DIR}/nzbget/downloads:/data/downloads'
      - '${PLEX_DIR}/Music:/music'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  nzbget:
    image: 'lscr.io/linuxserver/nzbget:latest'
    container_name: 'nzbget'
    restart: unless-stopped
    environment:
      PGID: '${PGID}'
      PUID: '${PUID}'
      TZ: '${TZ}'
    ports:
      - "6789:6789"
    volumes:
      - '${DATA_DIR}/nzbget/config:/config'
      - '${DATA_DIR}/nzbget/downloads:/data/downloads'
      - '${DATA_DIR}/nzbget/intermediate:/data/intermediate'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  ombi:
    image: 'lscr.io/linuxserver/ombi:latest'
    container_name: 'ombi'
    restart: unless-stopped
    environment:
      PGID: '${PGID}'
      PUID: '${PUID}'
      TZ: '${TZ}'
    ports:
      - "3579:3579"
    volumes:
      - '${DATA_DIR}/ombi/config:/config'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  overseerr:
    image: 'lscr.io/linuxserver/overseerr:latest'
    container_name: 'overseer'
    restart: unless-stopped
    environment:
      PGID: '${PGID}'
      PUID: '${PUID}'
      TZ: '${TZ}'
    ports:
      - "5055:5055"
    volumes:
      - '${DATA_DIR}/overseerr/config:/config'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  prowlarr:
    image: 'lscr.io/linuxserver/prowlarr:latest'
    container_name: 'prowlarr'
    restart: unless-stopped
    environment:
      PGID: '${PGID}'
      PUID: '${PUID}'
      TZ: '${TZ}'
    ports:
      - "9696:9696"
    volumes:
      - '${DATA_DIR}/prowlarr/config:/config'
    networks:
      - traefik-proxy

  radarr:
    image: 'lscr.io/linuxserver/radarr:latest'
    container_name: 'radarr'
    restart: unless-stopped
    environment:
      PGID: '${PGID}'
      PUID: '${PUID}'
      TZ: '${TZ}'
    ports:
      - "7878:7878"
    volumes:
      - '${DATA_DIR}/radarr/config:/config'
      - '${DATA_DIR}/nzbget/downloads:/data/downloads'
      - '${PLEX_DIR}/Movies:/movies'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  sonarr:
    image: 'lscr.io/linuxserver/sonarr:latest'
    container_name: 'sonarr'
    restart: unless-stopped
    environment:
      PGID: '${PGID}'
      PUID: '${PUID}'
      TZ: '${TZ}'
    ports:
      - "8989:8989"
    volumes:
      - '${DATA_DIR}/sonarr/config:/config'
      - '${DATA_DIR}/nzbget/downloads:/data/downloads'
      - '${PLEX_DIR}/TV Shows:/tv'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  tautulli:
    image: 'lscr.io/linuxserver/tautulli:latest'
    container_name: 'tautulli'
    restart: unless-stopped
    environment:
      PGID: '${PGID}'
      PUID: '${PUID}'
      TZ: '${TZ}'
    ports:
      - "8181:8181"
    volumes:
      - '${DATA_DIR}/tautulli/config:/config'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  ###########
  # AI APPS #
  ###########

  ollama:
    image: 'ollama/ollama:latest'
    container_name: 'ollama'
    restart: unless-stopped
    environment:
      TZ: '${TZ}'
    volumes:
      - '${DATA_DIR}/ollama/data:/root/.ollama'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  open-webui:
    image: 'ghcr.io/open-webui/open-webui:latest'
    container_name: 'open-webui'
    restart: unless-stopped
    environment:
      OLLAMA_BASE_URL: 'http://ollama:11434'
      # WEBUI_SECRET_KEY: '${WEBUI_SECRET_KEY}'
      TZ: '${TZ}'
    ports:
      - "8082:8080"
    volumes:
      - '${DATA_DIR}/open-webui/data:/app/backend/data'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  ###################
  # DASHBOARD APPS #
  ###################

  heimdall:
    image: 'lscr.io/linuxserver/heimdall:latest'
    container_name: 'heimdall'
    restart: unless-stopped
    environment:
      PGID: '${PGID}'
      PUID: '${PUID}'
      TZ: '${TZ}'
      APP_URL: 'https://heimdall.${DOMAIN}'
    ports:
      - "8282:80"
    volumes:
      - '${DATA_DIR}/heimdall/config:/config'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  organizr:
    image: 'organizr/organizr:latest'
    container_name: 'organizr'
    restart: unless-stopped
    environment:
      PGID: '${PGID}'
      PUID: '${PUID}'
      TZ: '${TZ}'
    ports:
      - "8888:80"
    volumes:
      - '${DATA_DIR}/organizr/config:/config'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  ################
  # DATABASE APPS #
  ################

  adminer:
    image: adminer:latest
    container_name: 'adminer'
    restart: unless-stopped
    environment:
      TZ: '${TZ}'
    ports:
      - "8090:8080"
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  mysql:
    # Version 8.4.0 is the latest version that I was able to get Ombi to work with - 2025-07-04
    image: mysql:8.4.0
    container_name: 'mysql'
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      # MYSQL_DATABASE: '${MYSQL_DATABASE}'
      # MYSQL_USER: '${MYSQL_USER}'
      # MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
      TZ: '${TZ}'
    ports: 
      - "3306:3306"
    volumes:
      - '${DATA_DIR}/mysql/data:/var/lib/mysql'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=false
    # command: >
    #   --innodb-buffer-pool-size=512M
    #   --innodb-flush-log-at-trx-commit=2
    #   --innodb-lock-wait-timeout=60
    #   --lock-wait-timeout=60
    #   --max-connections=200
    #   --wait-timeout=300
    #   --interactive-timeout=300
    #   --lower-case-table-names=1
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 3

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    platform: linux/amd64
    container_name: 'phpmyadmin'
    restart: unless-stopped
    environment:
      TZ: '${TZ}'
      PMA_HOST: 'mysql'
      # PMA_PORT: '3306'
      # PMA_USER: 'root'
      # PMA_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      # PMA_ARBITRARY: '1'
    ports:
      - "8083:80"
    # volumes:
    #   - '${DATA_DIR}/phpmyadmin/data/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  ###########
  # UTILITIES #
  ###########

  portainer:
    image: portainer/portainer-ce:latest
    container_name: 'portainer'
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - '${DATA_DIR}/portainer/data:/data'
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000"]
      interval: 30s
      timeout: 10s
      retries: 3

  portainer-agent:
    image: portainer/agent:latest
    container_name: 'portainer-agent'
    restart: unless-stopped
    ports:
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  # bookstack:
  #   image: linuxserver/bookstack:latest
  #   container_name: 'bookstack'
  #   restart: unless-stopped
  #   environment:
  #     TZ: '${TZ}'
  #   ports:
  #     - "8085:80"
  #   volumes:
  #     - '${DATA_DIR}/bookstack/config:/config'
  #   networks:
  #     - traefik-proxy
  #   labels:
  #     - com.centurylinklabs.watchtower.enable=true
  
  watchtower:
    image: containrrr/watchtower:latest
    container_name: 'watchtower'  
    restart: unless-stopped
    environment:
      TZ: '${TZ}'
      WATCHTOWER_CLEANUP: 'true'
      WATCHTOWER_POLL_INTERVAL: '3600'
      WATCHTOWER_gsLABEL_ENABLE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: 'uptime-kuma'
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - '${DATA_DIR}/uptime-kuma:/app/data'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  it-tools:
    image: corentinth/it-tools:latest
    container_name: 'it-tools'
    restart: unless-stopped
    environment:
      TZ: '${TZ}'
    ports:
      - "8084:80"
    volumes:
      - '${DATA_DIR}/it-tools/data:/app/data'
    networks:
      - traefik-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  ###########
  # MONITORING #
  ###########

  grafana:
    image: grafana/grafana:latest
    container_name: 'grafana'
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - '${DATA_DIR}/grafana/data:/var/lib/grafana'
    networks:
      - traefik-proxy

  prometheus:
    image: prom/prometheus:latest
    container_name: 'prometheus'
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - '${DATA_DIR}/prometheus/data:/prometheus'
    networks:
      - traefik-proxy

networks:
  traefik-proxy:
    name: traefik-proxy
    driver: bridge

